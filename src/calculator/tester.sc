package calculator

import model._

object tester {
  Math.isWholeNumber(0.1)                         //> res0: Boolean = false
  val g = List(
      "5*4/3^2-1",
      "536*(72*(1+2)-3)/5",
      "(7+5)*3",
      "7(1+3)",
      "7^-21",
      "7+(-3+6)",
      "8+9.74",
      "9.9-(3+12.345)",
      ".9+0.89",
      "-.7+-9.5*(3-9)",
      "4-4!",
      "-4!",
      "8..9.*7",
      "9-.",
      "(-4)!",
      "8.9!",
      "\u221A-1",
      "7.+9",
      "2log 3",
      "2-log 3",
      "2*-log 3",
      "2log 3-sin 5",
      "sin 1+cos 2-tan 3+ln 5",
      "7P5.3",
      "9C3")                                      //> g  : List[String] = List(5*4/3^2-1, 536*(72*(1+2)-3)/5, (7+5)*3, 7(1+3), 7^-
                                                  //| 21, 7+(-3+6), 8+9.74, 9.9-(3+12.345), .9+0.89, -.7+-9.5*(3-9), 4-4!, -4!, 8.
                                                  //| .9.*7, 9-., (-4)!, 8.9!, √-1, 7.+9, 2log 3, 2-log 3, 2*-log 3, 2log 3-sin 
                                                  //| 5, sin 1+cos 2-tan 3+ln 5, 7P5.3, 9C3)
  g.foreach { x => InfixToPostfix(x) match {
    case (true, postfix, _) => println(s"$x ==> $postfix ==> " +
      (Evaluator(postfix) match {
        case (_, Some(msg)) => msg
        case (Some(ans), _) => ans
      }))
    case (false, postfix, Some(msg)) => println(s"$x ==> $postfix ==> $msg")
  }}                                              //> 5*4/3^2-1 ==> List(0, 5, 4, *, 3, 2, ^, /, +, 1, -) ==> 1.2222222222222223
                                                  //| 536*(72*(1+2)-3)/5 ==> List(0, 536, 72, 1, 2, +, *, 3, -, *, 5, /, +) ==> 22
                                                  //| 833.6
                                                  //| (7+5)*3 ==> List(0, 7, 5, +, 3, *, +) ==> 36.0
                                                  //| 7(1+3) ==> List(0, 7, 1, 3, +, *, +) ==> 28.0
                                                  //| 7^-21 ==> List(0, 7, -021, ^, +) ==> 1.79036327059955E-18
                                                  //| 7+(-3+6) ==> List(0, 7, +, -03, +06, +) ==> 3.0
                                                  //| 8+9.74 ==> List(0, 8, +, 9.74, +) ==> 17.740000000000002
                                                  //| 9.9-(3+12.345) ==> List(0, 9.9, +, 1, 3, 12.345, +, *, -) ==> -5.445
                                                  //| .9+0.89 ==> List(0, .9, +, 0.89, +) ==> 1.79
                                                  //| -.7+-9.5*(3-9) ==> List(0, .7, -, 9.5, 3, 9, -, *, -) ==> 56.3
                                                  //| 4-4! ==> List(0, 4, +, 4, !, -) ==> -20.0
                                                  //| -4! ==> List(0, 4, !, -) ==> -24.0
                                                  //| 8..9.*7 ==> List(0, +, 8..9., *, 7) ==> Too many decimal points in 8..9.
                                                  //| 9-. ==> List(0, +, 9, -, .) ==> Invalid token: .
                                                  //| (-4)! ==> List(0, -04, !, +) ==> Factorial of a non-natural number: -4.0
                                                  //| 8.9! ==> List(0, +, 8.9, !) ==> Factorial of a non-natural number: 8.9
                                                  //| √-1 ==> List(0, -01, √, +) ==> NaN
                                                  //| 7.+9 ==> List(0, 7., +, 9, +) ==> 16.0
                                                  //| 2log 3 ==> List(0, 2, 3, l, *, +) ==> 0.9542425094393249
                                                  //| 2-log 3 ==> List(0, 2, +, 1, 3, l, *, -) ==> 1.5228787452803376
                                                  //| 2*-log 3 ==> List(0, 2, -01, *, 3, l, *, +) ==> -0.9542425094393249
                                                  //| 2log 3-sin 5 ==> List(0, 2, 3, l, *, +, 1, 5, s, *, -) ==> 0.867086766691666
                                                  //| 7
                                                  //| sin 1+cos 2-tan 3+ln 5 ==> List(0, 1, s, +, 2, c, +, 1, 3, t, *, -, 5, n, +)
                                                  //|  ==> 2.5738733666074385
                                                  //| 7P5.3 ==> List(0, +, 7, P, 5.3) ==> Factorial of a non-natural number: 5.3
                                                  //| 9C3 ==> List(0, 9, 3, C, +) ==> 4.35456E7
}
